# Draw
ggplot(data = tab, aes(x = EV1, y = EV2, color = sample.id)) +
geom_point(size = 3) + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("PCA_SNPgenotypes.pdf", width = 5, height = 3)
# Draw
ggplot(data = tab, aes(x = EV1, y = EV2, color = sample.id)) +
geom_point(size = 3) + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("PCA_SNPgenotypes.svg", width = 5, height = 3)
install.packages("svglite")
library(svglite)
# Draw
ggplot(data = tab, aes(x = EV1, y = EV2, color = sample.id)) +
geom_point(size = 3) + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("PCA_SNPgenotypes.svg", width = 5, height = 3)
setwd("~/Documents/QuarantaLab/PC9/WXS/accre_vars/geneFiles/")
fviz_pca_biplot(pca_rld_pars, repel = TRUE,
geom.ind = "point",
pointshape = 19,
pointsize = 2,
fill.ind = rownames(pca_rld_pars$x),
# col.ind = "black",
# habillage = rownames(pca_rld$x),
palette = c("red", "green", "blue"),
select.ind = list(name = c("VU", "MGH", "BR1")),
# alpha.var ="contrib",
col.var = "contrib",
gradient.cols = mycolors(25),
select.var = list(contrib = 25),
legend.title = list(fill = "Population", color = "Contribution")
) + theme_bw() + labs(title = "PCA Parentals", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12),
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12,face="bold"), axis.title=element_text(size=12),
legend.position = "right", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("/Users/Corey/Documents/QuarantaLab/PC9/RNAseq/bulkRNAseq_parentals_withContribution.svg", width = 7, height = 5)
fviz_pca_biplot(pca_rld_pars, repel = TRUE,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = rownames(pca_rld_pars$x),
# col.ind = "black",
# habillage = rownames(pca_rld$x),
palette = c("red", "green", "blue"),
select.ind = list(name = c("VU", "MGH", "BR1")),
# alpha.var ="contrib",
col.var = "contrib",
gradient.cols = mycolors(25),
select.var = list(contrib = 25),
legend.title = list(fill = "Population", color = "Contribution")
) + theme_bw() + labs(title = "PCA Parentals", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12),
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12,face="bold"), axis.title=element_text(size=12),
legend.position = "right", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("/Users/Corey/Documents/QuarantaLab/PC9/RNAseq/bulkRNAseq_parentals_withContribution.svg", width = 7, height = 5)
fviz_pca_biplot(pca_rld_clones, repel = TRUE,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = rownames(pca_rld_clones$x),
col.ind = "black",
# habillage = rownames(pca_rld$x),
palette = c("brown", "deeppink", "darkorchid",
"seagreen", "gold", "blue"),
select.ind = list(name = c("DS3", "DS6", "DS7",
"DS8", "DS9", "VU")),
# alpha.var ="contrib",
col.var = "contrib",
gradient.cols = mycolors(25),
select.var = list(contrib = 25),
legend.title = list(fill = "Population", color = "Contribution")
) + theme_bw() + labs(title = "PCA Clones", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12),
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12,face="bold"), axis.title=element_text(size=12),
legend.position = "right", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("/Users/Corey/Documents/QuarantaLab/PC9/RNAseq/bulkRNAseq_clonesVU_withContribution.svg", width = 7, height = 5)
### Getting key genes/individuals from RNAseq PCA ###
# fviz_eig(pca_rld)
fviz_pca_ind(pca_rld,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = rownames(pca_rld$x),
col.ind = "black",
palette = c("red", "green", "blue", "brown", "deeppink", "darkorchid",
"seagreen", "gold"),
select.ind = list(name = c("VU", "MGH", "BR1","DS3", "DS6", "DS7",
"DS8", "DS9")),
legend.title = list(fill = "Population")
# col.ind = "contrib", # Color by the quality of representation
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
# select.ind = list(name = c("VU", "MGH", "BR1")),
repel = TRUE     # Avoid text overlapping
) +
theme(legend.text = element_text(size = 12),
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
legend.position = "right")
### Getting key genes/individuals from RNAseq PCA ###
# fviz_eig(pca_rld)
fviz_pca_ind(pca_rld,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = rownames(pca_rld$x),
col.ind = "black",
palette = c("red", "green", "blue", "brown", "deeppink", "darkorchid",
"seagreen", "gold"),
select.ind = list(name = c("VU", "MGH", "BR1","DS3", "DS6", "DS7",
"DS8", "DS9")),
legend.title = list(fill = "Population"),
# col.ind = "contrib", # Color by the quality of representation
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
# select.ind = list(name = c("VU", "MGH", "BR1")),
repel = TRUE     # Avoid text overlapping
) +
theme(legend.text = element_text(size = 12),
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
legend.position = "right")
### Getting key genes/individuals from RNAseq PCA ###
# fviz_eig(pca_rld)
fviz_pca_ind(pca_rld,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = rownames(pca_rld$x),
col.ind = "black",
palette = c("red", "green", "blue", "brown", "deeppink", "darkorchid",
"seagreen", "gold"),
select.ind = list(name = c("VU", "MGH", "BR1","DS3", "DS6", "DS7",
"DS8", "DS9")),
legend.title = list(fill = "Population"),
# col.ind = "contrib", # Color by the quality of representation
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
# select.ind = list(name = c("VU", "MGH", "BR1")),
repel = TRUE     # Avoid text overlapping
) + theme_bw() + labs(title = "PCA Transcriptome", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12),
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
legend.position = "right", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("/Users/Corey/Documents/QuarantaLab/PC9/RNAseq/bulkRNAseq_all.svg", width = 7, height = 5)
### Getting key genes/individuals from RNAseq PCA ###
# fviz_eig(pca_rld)
fviz_pca_ind(pca_rld,
geom.ind = "point",
pointshape = 21,
pointsize = 2,
fill.ind = rownames(pca_rld$x),
col.ind = "black",
palette = c("red", "brown", "deeppink", "darkorchid",
"seagreen", "gold", "green", "blue"),
select.ind = list(name = c("VU", "MGH", "BR1","DS3", "DS6", "DS7",
"DS8", "DS9")),
legend.title = list(fill = "Population"),
# col.ind = "contrib", # Color by the quality of representation
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
# select.ind = list(name = c("VU", "MGH", "BR1")),
repel = TRUE     # Avoid text overlapping
) + theme_bw() + labs(title = "PCA Transcriptome", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12),
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
legend.position = "right", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("/Users/Corey/Documents/QuarantaLab/PC9/RNAseq/bulkRNAseq_all.svg", width = 7, height = 5)
setwd('~/Documents/QuarantaLab/PC9/scRNAseq/')
DimPlot(dat_hashtag_clones, reduction.use = "umap", group.by = "Population") +
scale_color_manual(values = c("brown", "deeppink", "darkorchid",
"seagreen", "gold", "blue")) +
scale_fill_manual(values = c("brown", "deeppink", "darkorchid",
"seagreen", "gold", "blue")) +
ggsave("RNAclones_UMAP_PopColored_sameColors.svg", width = 6, height = 4)
setwd('~/Documents/QuarantaLab/PC9/WXS/')
ggplot(data = tab, aes(x = EV1, y = EV2, color = sample.id)) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2")
ggplot(data = tab, aes(x = EV1, y = EV2, color = "black", fill = "sample.id")) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2")
ggplot(data = tab, aes(x = EV1, y = EV2, fill = "sample.id")) +
geom_point(size = 2, shape = 21, color = "black") + theme_bw()
ggplot(data = tab, aes(x = EV1, y = EV2, fill = "sample.id")) +
geom_point(size = 2, shape = 21, color = "black") + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = tab, aes(x = EV1, y = EV2, fill = "sample.id")) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2")
ggplot(data = tab, aes(x = EV1, y = EV2, color = "sample.id")) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2")
tab
ggplot(data = tab, aes(x = EV1, y = EV2, color = sample.id)) +
geom_point(size = 2) + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = tab, aes(x = EV1, y = EV2, color = sample.id)) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_color_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_fill_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_fill_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
geom_hline(yintercept=0, color = "black", size = 2, linetype = "longdash") +
geom_vline(yintercept=0, color = "black", size = 2, linetype = "longdash") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2")
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_fill_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
geom_hline(yintercept=0, color = "black", size = 2, linetype = "longdash") +
geom_vline(xintercept=0, color = "black", size = 2, linetype = "longdash") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2")
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_fill_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
geom_hline(yintercept=0, color = "black", size = 1, linetype = "dashed") +
geom_vline(xintercept=0, color = "black", size = 1, linetype = "dashed") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2")
# Draw
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_fill_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
geom_hline(yintercept=0, color = "black", size = 1, linetype = "dashed") +
geom_vline(xintercept=0, color = "black", size = 1, linetype = "dashed") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("PCA_SNPgenotypes.svg", width = 5, height = 3)
# Draw
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 2, shape = 21) + theme_bw() +
scale_fill_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
geom_hline(yintercept=0, color = "black", size = 1, linetype = "dashed") +
geom_vline(xintercept=0, color = "black", size = 1, linetype = "dashed") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("PCA_SNPgenotypes.svg", width = 7, height = 5)
# Draw
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 3, shape = 21) + theme_bw() +
scale_fill_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
geom_hline(yintercept=0, color = "black", size = 1, linetype = "dashed") +
geom_vline(xintercept=0, color = "black", size = 1, linetype = "dashed") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("PCA_SNPgenotypes.svg", width = 7, height = 5)
# Draw
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 3, shape = 21) + theme_bw() +
scale_fill_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
geom_hline(yintercept=0, color = "black", size = 0.5, linetype = "dashed") +
geom_vline(xintercept=0, color = "black", size = 0.5, linetype = "dashed") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("PCA_SNPgenotypes.svg", width = 7, height = 5)
# Draw
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 3, shape = 21) + theme_bw() +
scale_fill_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
geom_hline(yintercept=0, color = "black", size = 0.75, linetype = "dashed") +
geom_vline(xintercept=0, color = "black", size = 0.75, linetype = "dashed") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("PCA_SNPgenotypes.svg", width = 7, height = 5)
# Draw
ggplot(data = tab, aes(x = EV1, y = EV2, fill = sample.id)) +
geom_point(size = 4, shape = 21) + theme_bw() +
scale_fill_manual(values = c("blue", "green", "red", "brown",
"deeppink", "darkorchid", "seagreen", "gold"),
labels = c("VU", "MGH", "BR1", "DS3", "DS6",
"DS7", "DS8", "DS9"),
name = "Population") +
geom_hline(yintercept=0, color = "black", size = 0.5, linetype = "dashed") +
geom_vline(xintercept=0, color = "black", size = 0.5, linetype = "dashed") +
labs(title = "PCA of SNP genotypes", x = "PC1", y = "PC2") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggsave("PCA_SNPgenotypes.svg", width = 7, height = 5)
setwd('~/git/ThreeStateMelanoma/')
tile <- read.csv('all_cellLine_tile.csv')
tile_new <- subset(tile, !cell.line == "PC9.DS8") # DS8 cFP did not match model prediction
cols <- c("not.assigned" = "grey90", "PC9.DS1" = "coral", "PC9.DS3" = "brown",
"PC9.DS4" = "deepskyblue", "PC9.DS6" = "deeppink", "PC9.DS7" = "darkorchid",
"PC9.DS9" = "gold")
pops <- c("not.assigned", "PC9.DS1", "PC9.DS3", "PC9.DS4",
"PC9.DS6","PC9.DS7", "PC9.DS9")
labs <- c("Not Assigned", "DS1", "DS3", "DS4", "DS6", "DS7", "DS9")
ggplot(tile_new) +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS1'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "coral") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS3'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "brown") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS4'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "deepskyblue") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS6'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "deeppink") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS7'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "darkorchid") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS9'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "gold") +
theme_bw() +
scale_fill_manual(values = cols,
breaks = pops,
labels = labs,
name = "Subline") +
xlab("DIP Rate") + ylab("Division Rate") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 12, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Subline Parameter Sweep") +
ggsave("parameterScan_Tile.pdf", width = 10, height = 5)
ggplot(tile_new) +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS1'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "coral") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS3'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "brown") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS4'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "deepskyblue") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS6'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "deeppink") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS7'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "darkorchid") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS9'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "gold") +
theme_bw() +
scale_fill_manual(values = cols,
breaks = pops,
labels = labs,
name = "Subline") +
scale_fill_gradient(name = "p-value") +
xlab("DIP Rate") + ylab("Division Rate") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 12, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Subline Parameter Sweep") +
ggsave("parameterScan_Tile.pdf", width = 10, height = 5)
ggplot(tile_new) +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS1'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "coral") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS3'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "brown") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS4'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "deepskyblue") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS6'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "deeppink") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS7'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "darkorchid") +
geom_tile(data = subset(tile_new, cell.line.new == 'PC9.DS9'),
aes(DIP.rate, division.rate, fill = cell.line.new, alpha = p.value), color = "gold") +
theme_bw() +
scale_fill_manual(values = cols,
breaks = pops,
labels = labs,
name = "Subline") +
scale_alpha_continuous(name = "p-value") +
xlab("DIP Rate") + ylab("Division Rate") +
theme(legend.text = element_text(size = 12), legend.position = "right",
plot.title = element_text(size = 12, hjust = 0.5, face = "bold"), axis.text=element_text(size=12),
legend.title = element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Subline Parameter Sweep") +
ggsave("parameterScan_Tile.pdf", width = 10, height = 5)
